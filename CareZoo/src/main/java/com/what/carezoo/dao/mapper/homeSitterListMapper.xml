<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.what.carezoo.dao.HomeSitterListDao">
	<insert id="insertHsl" parameterType="homeSitterList">
		<selectKey order="BEFORE" keyProperty="hsl_num" resultType="int">
			select homsitterlist_seq.nextval from dual
		</selectKey>
		INSERT 		
		INTO homesitterlist (hsl_num,hs_num,hsl_title,hsl_comment,hsl_size,hsl_care_place,hsl_yard,hsl_baby, hsl_family,hsl_service_type,hsl_pet_age,hsl_writedate,hsl_chkin_str_time,hsl_chkin_end_time,hsl_chkout_str_time,hsl_chkout_end_time,hsl_status)
		VALUES(#{hsl_num}, #{hs_num}, #{hsl_title}, #{hsl_comment}, #{hsl_size}, #{hsl_care_place}, #{hsl_yard}, #{hsl_baby}, #{hsl_family}, #{hsl_service_type}, #{hsl_pet_age}, sysdate, #{hsl_chkin_str_time}, #{hsl_chkin_end_time}, #{hsl_chkout_str_time}, #{hsl_chkout_end_time}, 0)
	</insert>
	
	<insert id="insertHomeSitterList" parameterType="homeSitterList">
		<selectKey order="BEFORE" keyProperty="hsl_num" resultType="int">
			select homsitterlist_seq.nextval   from dual
		</selectKey>
<!-- 		insert into homesitterlist -->
<!-- 		(hsl_num,hsl_size,hsl_chkin,hsl_chkout,hsl_service_type,hsl_pet_age,hsl_writedate) -->
<!-- 		values -->
<!-- 		(#{hsl_num},#{hsl_size},#{hsl_chkin},#{hsl_chkout},#{hsl_service_type},#{hsl_pet_age},sysdate) -->
		INSERT 		
		INTO homesitterlist (hsl_num,hs_num,hsl_title,hsl_comment,hsl_size,hsl_care_place,hsl_yard,hsl_baby, hsl_family,hsl_service_type,hsl_pet_age,hsl_writedate,hsl_chkin_str_time,hsl_chkin_end_time,hsl_chkout_str_time,hsl_chkout_end_time,hsl_status)
		VALUES(#{hsl_num}, #{hs_num}, #{hsl_title}, #{hsl_comment}, #{hsl_size}, #{hsl_care_place}, #{hsl_yard}, #{hsl_baby}, #{hsl_family}, #{hsl_service_type}, #{hsl_pet_age}, sysdate, #{hsl_chkin_str_time}, #{hsl_chkin_end_time}, #{hsl_chkout_str_time}, #{hsl_chkout_end_time},0)
		
<!-- 		INTO homesitterdisabledate (hsd_num, hs_num, hsd_disabledate)  -->
<!-- 		VALUES (#{hsd_num}, #{hs_num}, #{hsd_disabledate}) -->
	</insert>
	<update id="updateDisDates" parameterType="map">
		update homesitterlist
		set hsl_disdates = #{hsl_disdates}
		where hsl_num = #{hsl_num}
		
	</update>
	<!--예약불가일자 받기 -->
	<insert id="insertDisdates" parameterType="map">		
		INSERT 
		INTO homesitterdisabledate (hsl_num, hsd_num, hsd_disabledate)
		VALUES  (#{hsl_num}, homesitterdisabledate_seq.nextval, #{hsd_disabledate} )
	</insert>
	
	<select id="selectDisdates" parameterType="int" resultType="string">
		select trim(hsd.hsd_disabledate), hsl.hsl_num
        from homesitterlist hsl, homesitterdisabledate hsd
        where hsl.hsl_num = #{hsl_num}
	</select>
	
	<update id="updateHsl" parameterType="homeSitterList">
		update homesitterlist
		set hsl_title = #{hsl_title},
			hsl_comment = #{hsl_comment},
			hsl_size = #{hsl_size},
			hsl_care_place = #{hsl_care_place},
			hsl_address = #{hsl_address},
			hsl_d_address = #{hsl_d_address},
			hsl_yard = #{hsl_yard},
			hsl_baby = #{hsl_baby},
			hsl_family = #{hsl_family},
			hsl_service_type = #{hsl_service_type},
			hsl_pet_age = #{hsl_pet_age},
			hsl_writedate = sysdate,
			hsl_chkin_str_time = #{hsl_chkin_str_time},
			hsl_chkin_end_time = #{hsl_chkin_end_time},
			hsl_chkout_str_time = #{hsl_hsl_chkout_str_timebaby},
			hsl_chkout_end_time = #{hsl_chkout_end_time},
			hsl_status = 1
		where hsl_status = 0
		and hsl_num =#{hsl_num}
		and hs_num = #{hs_num}
	</update>
	
	<delete id="deleteHsl" parameterType="int"></delete>
	
	<select id="selectOnebyHsl_num" parameterType="int" resultType="homeSitterList">
		select * from homesitterlist where hsl_num = #{hsl_num}
	</select>	
	
<!-- 	<select id="selectAllHsl" resultType="map"> -->
<!-- 		SELECT * -->
<!-- 		FROM homesitterlist hsli LEFT OUTER JOIN homesitter hs ON hsli.hs_num = hs.hs_num -->
<!-- 		LEFT OUTER JOIN homesitterlist_image hsi ON hsli.hsl_num = hsi.hsl_num -->
<!-- 		<trim prefix="where" prefixOverrides="AND|OR"> -->
<!-- 			<if test="hsl.hsl_size != null" > -->
<!-- 				AND hsl_size like -->
<!-- 				('%${hsl.hsl_size}%') -->
<!-- 			</if> -->
<!-- 			<if test="hsl.hsl_service_type != null"> -->
<!-- 				AND hsl_service_type like -->
<!-- 				 ('%${hsl.hsl_service_type}%') -->
<!-- 			</if> -->
<!-- 			<if test="hsl.hsl_pet_age != null"> -->
<!-- 				 AND hsl_pet_age like -->
<!-- 				('%${hsl.hsl_pet_age}%') -->
<!-- 			</if> -->
<!-- 			<if test="hsl.hsl_chkin != ''"> -->
<!-- 				AND  <![CDATA[hsli.hsl_chkin <= #{hsl.hsl_chkin}]]> -->
<!-- 			</if> -->
<!-- 			<if test="hsl.hsl_chkout != ''"> -->
<!-- 				AND <![CDATA[hsli.hsl_chkout >= #{hsl.hsl_chkout}]]> -->
<!-- 			</if> -->
<!-- 			<if test="hsl.hsl_address != null">  -->
<!-- 				and hsli.hsl_address in (select hsl_address from homesitterlist where -->
<!-- 				<foreach collection="list" item="item" separator="or"> -->
<!-- 					hsl_address like ('%${item}%') -->
<!-- 				</foreach> -->
<!-- 				) -->
<!-- 			</if> -->
<!-- 		</trim> -->
<!-- 	</select> -->
	
	<!--  가격 가져오기 -->
	<select id="selectHslPrice" resultType="map" parameterType="string">
		select hsl.hsl_size, hsp.hspr_add_pet_price, hsp.hspr_price from homesitterlist hsl, homesitterprice hsp 
		where hsl.hsl_size like ('%${hsl_size}%') 
		and hsp.hsl_size like ('%${hsl_size}%') 
		and hsp.hsl_service_type like ('%${hsl_service_type}%')
		and hsl.hsl_service_type like ('%${hsl_service_type}%')
	</select>
	
<!-- 	<select id="selectAllHsl" resultType="homeSitterList"> -->
<!-- 		select * -->
<!--         from homesitter hs, -->
<!--              (select hs_num, hsl_num, hsl_address, hsl_service_type, hsl_size, hsl_pet_age from homesitterlist) hsli, -->
<!--              (select hs_num, count(hs_num) as hsc_cmt_count, round(avg(hsc_star),1) as hs_avgStar from homesittercomment group by hs_num) hsc -->
<!-- 		<trim prefix="where" prefixOverrides="AND|OR"> -->
<!-- 					hs.hs_num = hsli.hs_num(+) -->
<!--        		 and   hs.hs_num = hsc.hs_num(+) -->
<!-- 			<if test="hsl.hsl_size != null" > -->
<!-- 				AND hsl_size like -->
<!-- 				('%${hsl.hsl_size}%') -->
<!-- 			</if> -->
<!-- 			<if test="hsl.hsl_service_type != null"> -->
<!-- 				AND hsl_service_type like -->
<!-- 				 ('%${hsl.hsl_service_type}%') -->
<!-- 			</if> -->
<!-- 			<if test="hsl.hsl_pet_age != null"> -->
<!-- 				 AND hsl_pet_age like -->
<!-- 				('%${hsl.hsl_pet_age}%') -->
<!-- 			</if> -->
<!-- 			<if test="hsl.hsl_chkin != ''"> -->
<!-- 				AND  <![CDATA[hsli.hsl_chkin <= #{hsl.hsl_chkin}]]> -->
<!-- 			</if> -->
<!-- 			<if test="hsl.hsl_chkout != ''"> -->
<!-- 				AND <![CDATA[hsli.hsl_chkout >= #{hsl.hsl_chkout}]]> -->
<!-- 			</if> -->
<!-- 			<if test="hsl.hsl_address != null">  -->
<!-- 				and hsli.hsl_address in (select hsl_address from homesitterlist where -->
<!-- 				<foreach collection="list" item="item" separator="or"> -->
<!-- 					hsl_address like ('%${item}%') -->
<!-- 				</foreach> -->
<!-- 				) -->
<!-- 			</if> -->
<!-- 		</trim> -->
<!-- 		order by hs.hs_num	 -->
<!-- 	</select> -->

	<select id="selectAllHsl" resultType="homeSitterList">
		select *
        from homesitter hs,
            (select hs_num, hsl_num, hsl_address, hsl_service_type, hsl_size, hsl_pet_age from homesitterlist) hsli,
            (select hsl.hsl_num, hsp.hspr_add_pet_price, hsp.hsl_size, hsp.hspr_price, hsp.hsl_service_type from homesitterlist hsl, homesitterprice hsp
            <trim prefix="where" prefixOverrides="AND|OR">           		
            		hsp.hsl_size = hsl.hsl_size(+)
	            <if test="hsl.hsl_service_type != null">
					AND hsp.hsl_size like ('%${hsl.hsl_size}%')
				</if>
				<if test="hsl.hsl_service_type != null">
	            	AND hsl.hsl_size like ('%${hsl.hsl_size}%') 
	            </if>	
	            <if test="hsl.hsl_service_type != null">
					AND hsp.hsl_service_type like ('%${hsl.hsl_service_type}%')
				</if>
				<if test="hsl.hsl_service_type != null">
					AND hsl.hsl_service_type like ('%${hsl.hsl_service_type}%')
				</if>
            </trim>
            ) hsp,
            (select hs_num, count(hs_num) as hsc_cmt_count, round(avg(hsc_star),1) as hs_avgStar from homesittercomment group by hs_num) hsc
		<trim prefix="where" prefixOverrides="AND|OR">
			  AND hsli.hsl_num = hsp.hsl_num(+)
	          AND hs.hs_num = hsli.hs_num(+)
	          AND hs.hs_num = hsc.hs_num(+)
			<if test="hsl.hsl_size != null" >
				AND hsli.hsl_size like ('%${hsl.hsl_size}%')
			</if>
			<if test="hsl.hsl_service_type != null">
				AND hsli.hsl_service_type like ('%${hsl.hsl_service_type}%')
			</if>
			<if test="hsl.hsl_pet_age != null">
				 AND hsli.hsl_pet_age like ('%${hsl.hsl_pet_age}%')
			</if>
			<if test="hsl.hsl_chkin != ''">
				AND  <![CDATA[hsli.hsl_chkin <= #{hsl.hsl_chkin}]]>
			</if>
			<if test="hsl.hsl_chkout != ''">
				AND <![CDATA[hsli.hsl_chkout >= #{hsl.hsl_chkout}]]>
			</if>
			<if test="hsl.hsl_address != null"> 
				and hsli.hsl_address in (select hsl_address from homesitterlist where
				<foreach collection="list" item="item" separator="or">
					hsl_address like ('%${item}%')
				</foreach>
				)
			</if>
		</trim>
		order by hs.hs_num	
	</select>
	
	
		<!-- 모든 홈시터 가져오기 -->
	<select id="selectHsl" resultType="map" parameterType="int">
		SELECT * 
		FROM homesitterlist hsli LEFT OUTER JOIN homesitter hs ON hsli.hs_num = hs.hs_num
		LEFT OUTER JOIN homesitterlist_image hsi ON hsli.hsl_num = hsi.hsl_num
		where hsli.hsl_num = #{hsl_num}
	</select>
	
	
	<select id="selectHsls" resultType="homeSitterList">
		select *
        from homesitter hs,
              homesitterlist hsl,
             (select hs_num, count(hs_num) as hsc_cmt_count, round(avg(hsc_star),1) as hs_avgStar from homesittercomment group by hs_num) hsc
        where hs.hs_num = hsl.hs_num(+)
        and   hs.hs_num = hsc.hs_num(+)
        order by hs.hs_num
	</select>
	
	<select id="selectallHsl" resultType="hashmap">
		select *
        from homesitter hs,
             (select hs_num, hsl_num, hsl_address, hsl_service_type, hsl_size, hsl_pet_age from homesitterlist) hsl,
             (select hs_num, count(hs_num) as hsc_cmt_count, round(avg(hsc_star),1) as hs_avgStar from homesittercomment group by hs_num) hsc
        where hs.hs_num = hsl.hs_num(+)
        and   hs.hs_num = hsc.hs_num(+)
        order by hs.hs_num		
	</select>
<!-- 	<select id="selectallHsl" resultType="map"> -->
<!-- 		SELECT *  -->
<!-- 		FROM homesitterlist hsli LEFT JOIN homesitter hs ON hsli.hs_num = hs.hs_num -->
<!-- 		LEFT JOIN homesitterlist_image hsi ON hsli.hsl_num = hsi.hsl_num		 -->
<!-- 	</select> -->
	
	<!-- 게시글용 파일 올리기 -->
	<insert id="insertFile" parameterType="map">		
		insert into homesitterlist_image (hsl_img_num, hsl_num,hsl_img_filename,hsl_img_write_date )
		values (homesitterlist_image_seq.nextval,#{hsl_num},#{hsl_img_filename},sysdate)
	</insert>
	
	<!-- 게시글용 파일 가져오기 -->
	<select id="selectFileName" parameterType="int" resultType="string">
		select * from homesitterlist_image where hsl_num = #{hsl_num}
	</select>
		
	<select id="selectFileList" parameterType="int" resultType="string">
		select hsl_img_filename
		  from homesitterlist hsl, homesitterlist_image hslI
		 where hsl.hsl_num = hslI.hsl_num(+)
		   and hsl.hsl_num = #{hsl_num}
		<!-- resultType = "hashMap" 으로 하면 list로 간다요 -->
	</select>
	
	<update id="updateFile" parameterType="map">
		update homesitter
		set hs_filename = #{hs_filename}	
		where hs_num = #{hs_num}
	</update>

</mapper>