<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.what.carezoo.dao.MemberDao">
	<insert id="insertCustomer" parameterType="customer">
		<selectKey order="BEFORE" keyProperty="c_num" resultType="int">
			select customer_seq.nextval from dual
		</selectKey>
		insert into customer(c_num,c_name,c_email,c_pass,c_address,c_d_address,c_sex,c_birth,c_contact)
		values(#{c_num},#{c_name},#{c_email},#{c_pass},#{c_address},#{c_d_address},#{c_sex},#{c_birth},#{c_contact})
	</insert>
	
	<update id="updateCustomer" parameterType="customer">
		update customer 
			set c_contact = #{c_contact},
				c_address = #{c_address},
				c_d_address = #{c_d_address},
				c_pass = #{c_pass}
			where c_num = #{c_num}
	</update>
	
	<delete id="deleteCustomer" parameterType="int">
		delete from customer where c_num = #{c_num}
	</delete>
	
	<select id="selectOneByNum" parameterType="int" resultType="customer">
		select * from customer where c_num=#{c_num}
	</select>
	
	<select id="selectOneByEmail" parameterType="string" resultType="customer">
		select * from customer where c_email=#{c_email}
	</select>
	
	<select id="selectAll" resultType="customer">
		select * from customer
	</select>
	
	<select id="userIdCheck" parameterType="string" resultType="Integer">
		select count(*) from customer where c_email =#{c_email}
	</select>
	
	<insert id="insertFile" parameterType="map">
		insert into customer_image (c_num,c_filename,c_write_date )
		values (#{c_num},#{c_filename},sysdate)
	</insert>
	
	<select id="selectFile" parameterType="int" resultType="string">
		select c_filename from customer_image where c_num = #{c_num}
	</select>
	
	<update id="updateFile" parameterType="map">
		update customer_image
		set c_filename = #{c_filename}
			
		where c_num = #{c_num}
	</update>
	<!-- email 찾기 -->
	<select id="findC_email" parameterType="string" resultType="string">
		select c_email from customer where c_name = #{name} and c_contact = #{number}
	</select>
	<select id="findC_emailCount" parameterType="string" resultType="int">
		select count(*) from customer where c_name = #{name} and c_contact = #{number}
	</select>
	<!-- 자바 메일 - 이메일 인증하기 -->
	<insert id="GetKey" parameterType="map">
		update customer set c_email_key = #{c_email_key} where c_email = #{c_email}
	</insert>
	<update id="alter_cKey" parameterType="map">
		update customer set c_email_key = 'Y' where c_email = #{c_email} and  c_email_key = #{c_email_key}
	</update>
	
	
	<!-- 메인에 리뷰가져오기 -->
	<select id="getMainSitterReview" resultType="map">
	<![CDATA[ 
		select hsc.*, hs.hs_filename, hs.hs_name
		from homesitter hs,
			(select *
			from (select *
				from homesittercomment
				order by hsc_write_date desc)
			where ROWNUM <=5) hsc
		where hsc.hs_num = hs.hs_filename(+)
	
	]]>
	</select>
	
	
	<select id="getModalPH" parameterType="int" resultType="map">
		select ph.ph_name, ph.ph_address, ph.ph_d_address, ph.ph_contact, NVL(st.star,0) star, phr.*
		from pethotel ph,
		(select ph_num, round(avg(phc_star),1) star
		from pethotelcomment
		group by ph_num) st,
		(select *
		from pethotelreservation
		where phr_num = #{num}) phr
		where phr.ph_num = ph.ph_num
        and phr.ph_num = st.ph_num(+)
	</select>
	
	<select id="getModalHS" parameterType="int" resultType="map">
		select hs.hs_name, hs.hs_contact,hs.hs_filename, hs.hs_address, hs.hs_d_address,NVL(st.star,0) star, hsr.*
		from homesitter hs,
			(select hs_num, round(avg(hsc_star),1) as star
			from homesittercomment
			group by hs_num) st,
			(select *
			from homesitterreservation
			where hsr_num = #{num}) hsr
		where hsr.hs_num = hs.hs_num
		and hsr.hs_num = st.hs_num(+)
	</select>
	
	<select id="getModalVS" parameterType="int" resultType="map">
		select vs.vs_name, vs.vs_contact, vs.vs_img, vsr.*, NVL(st.star,0) star
		from visitsitter vs,
			(select *
			from visitsitterreservation
			where vsr_num = #{num}) vsr,
			(select vs_num, round(avg(vsc_star),1)as star
			from visitsittercomment
			GROUP by vs_num) st
		where vsr.vs_num = vs.vs_num(+)
		and vsr.vs_num = st.vs_num(+)
	</select>
	
	<!-- 예약 취소 -->
	<delete id="cancelHSR" parameterType="int">
		delete from homesitterReservtion where hsr_num = #{hsr_num}
	</delete>
	<delete id="cancelVSR" parameterType="int">
		delete from visitsitterReservation where vsr_num = #{vsr_num}
	</delete>
	<delete id="cancelPHR" parameterType="int">
		delete from pethotelReservation where phr_num = #{phr_num}
	</delete>
</mapper>