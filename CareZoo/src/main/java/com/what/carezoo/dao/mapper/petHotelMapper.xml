<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.what.carezoo.dao.PetHotelDao">

	<insert id="insert" parameterType="PetHotel">
		<selectKey order="BEFORE" keyProperty="ph_num"
			resultType="int">
			<!-- keyProperty="">엔 보드가 가지고 있는 키값을 넣어주면 됨 result Type은 sequence가 int형이니까 
				int로. board속성에 num이 int형으로 sequence를 생성해서 넣었다. -->
			select pethotel_seq.nextval from dual
			<!-- insert하면서 시퀀스를 하는게 아니라 시퀀스를 미리 조회해서 값을 미리 가지고 있는다 그 값을 파라미터로 받아온 
				보드에 있는 num에 집어넣는다 -->
		</selectKey>
		insert
		into pethotel (ph_num, ph_p_count, ph_price, ph_name,
		ph_address,
		ph_d_address)
		values (#{ph_num}, #{ph_p_count}, 0 ,
		#{ph_name},
		#{ph_address}, #{ph_d_address} )
	</insert>

	<update id="update" parameterType="PetHotel">
		update pethotel
		set
		ph_name=#{ph_name},
		ph_address = #{ph_address},
		ph_d_address=#{ph_d_address},
		ph_p_count = #{ph_p_count}
		where ph_num =
		#{ph_num}
	</update>

	<delete id="delete" parameterType="int">
		delete from pethotel
		where
		ph_num = #{ph_num}
	</delete>

	<select id="selectOne" parameterType="int" resultType="PetHotel">
		select *
		from pethotel ph
		where ph.ph_num = #{ph_num}
	</select>
	<select id="selectFileList" parameterType="int"
		resultType="String">
		select ph_fileName
		from pethotel ph,pethotel_image f
		where ph.ph_num =
		f.ph_num(+)
		and ph.ph_num = #{ph_num}
		<!-- resultType = "hashMap" 으로 하면 list로 간다요 -->
	</select>

	<select id="selectAll" resultType="PetHotel">
		select *
		from pethotel ph,
		(select ph_num, min(phrm_price) as
		ph_minPrice,max(phrm_price) as
		ph_maxPrice
		from pethotelroom group by
		ph_num) r,
		(select ph_num,
		count(ph_num) as ph_c_count,
		round(avg(phc_star),1)as
		ph_avgStar from
		pethotelcomment group by
		ph_num) c
		where ph.ph_num = r.ph_num(+)
		and
		ph.ph_num = c.ph_num(+)
		order by ph.ph_num

	</select>
	<select id="search" resultType="PetHotel">

		select *
		from pethotel ph,
		(select ph_num, min(phrm_price) as
		ph_minPrice,max(phrm_price) as ph_maxPrice
		from pethotelroom group by
		ph_num) r,
		(select ph_num, count(ph_num) as ph_c_count,
		round(avg(phc_star),1)as
		ph_avgStar from pethotelcomment group by
		ph_num) c

		<trim prefix="where" prefixOverrides="AND|OR">
			ph.ph_num = r.ph_num(+)
			and ph.ph_num = c.ph_num(+)

			<!-- <if test="ph.ph_pet_size != null"> -->
			<!-- and ph_pet_size like -->
			<!-- '%' || #{ph.ph_pet_size} || '%' -->
			<!-- </if> -->

			<if test="ph.phr_chkin != null">
				<if test="ph.phr_chkout != null">


					and
					ph.ph_num IN ( select phrm.ph_num
					from pethotelroom phrm
					where
					phrm.phrm_num not in(
					select phrm2.phrm_num
					from pethotelroom phrm2
					where phrm2.phrm_p_max <![CDATA[ <= ]]>
					(
					select count(phrm.phrm_num) r_cnt
					from PETHOTELROOM phrm,
					PETHOTELRESERVATION phr
					where phrm.phrm_pet_size like '%' ||
					#{ph.ph_pet_size} || '%'
					and phrm.phrm_num = phr.phrm_num
					and
					phrm.phrm_num = phrm2.phrm_num
					and (phr_chkin between '2019-09-10'
					and '2019-09-12'
					or (phrm2.phrm_num = phr.phrm_num and phr_chkout
					between '2019-10-01'
					and '2019-10-12')
					group by phrm.phrm_num)
					or
					phrm2.phrm_pet_size NOT like '%' || #{ph.ph_pet_size} || '%')
					<if test="ph.phr_chkin != null">
						and phrm.phrm_pet_size like '%' || #{ph.ph_pet_size} ||
						'%'
					</if>
					)

				</if>
			</if>
			<!-- <if test="ph.hsl_chkin != ''"> -->
			<!-- AND hsl_chkin like '%' || #{hsl.hsl_chkin} || '%' -->
			<!-- </if> -->
			<!-- <if test="ph.hsl_chkout != ''"> -->
			<!-- AND hsl_chkout like '%' || #{hsl.hsl_chkout} || '%' -->
			<!-- </if> -->
			<!-- <if test="hsl.hsl_chkin != null"> -->
			<!-- or <![CDATA[hsl_chkin >= #{hsl.hsl_chkin} and hsl_chkout <= #{hsl.hsl_chkout}]]> -->
			<!-- </if> -->
			<if test="ph.ph_address != null">
				and ph.ph_address
				<foreach collection="list" item="item" separator="or">
					like
					('%${item}%')
				</foreach>
			</if>
		</trim>
		order by ph.ph_num
	</select>

	<select id="selectPhRoomByPh_num" resultType="PetHotelRoom">
		select * from PethotelRoom
		where ph_num = #{ph_num}
	</select>
	<select id="DetailPhRoomByDate" resultType="PetHotelRoom">
		select ph_num, phrm_num, phrm_name, phrm_price, phrm_p_max,
		phrm_m_price, phrm_l_price, phrm_pet_size, NVL(r_cnt,0) rcount from
		PETHOTELROOM phrm,
		(select phrm2.phrm_num phrm_num2,
		count(phrm2.phrm_num) r_cnt from
		PETHOTELROOM phrm2,
		PETHOTELRESERVATION phr
		where phrm2.phrm_num = phr.phrm_num

		<if test="phr_chkin != null">
			<if test="phr_chkout != null">
				and (phr_chkin between #{phr_chkin} and #{phr_chkout}
				or
				(phrm2.phrm_num = phr.phrm_num and phr_chkout between #{phr_chkin}
				and #{phr_chkout}))
			</if>
		</if>
		and phrm2.ph_num = #{ph_num}
		group by phrm2.phrm_num) chkphrm
		where
		phrm.ph_num = #{ph_num}
		and phrm.phrm_num = chkphrm.phrm_num2(+)
		order
		by phrm_num
	</select>

	<select id="selectPhRoomByPhrm_num" resultType="PetHotelRoom">
		select * from
		PETHOTELROOM
		where phrm_num = #{phrm_num}
	</select>



	<insert id="insertFile" parameterType="map">
		insert into pethotel_image
		(ph_img_num,ph_num,ph_fileName )
		values
		(hotel_image_seq.nextval,#{ph_num},#{ph_fileName})
	</insert>

	<select id="selectFileName" parameterType="int"
		resultType="String">
		select * from pethotel_image where PH_NUM = #{ph_num}
	</select>


	<!-- <select id="selectAllHsl" resultType="map"> -->
	<!-- SELECT * -->
	<!-- FROM homesitterlist HSLI LEFT JOIN homesitter HS ON HSLI.HS_NUM = HS.HS_NUM -->
	<!-- LEFT JOIN homesitterlist_image HSI ON HSLI.HSL_NUM = HSI.HSL_NUM -->
	<!-- <trim prefix="where" prefixOverrides="AND|OR"> -->

	<!-- <if test="hsl.hsl_size != null"> -->
	<!-- or hsl_size = #{hsl.hsl_size} -->
	<!-- </if> -->
	<!-- <if test="hsl.hsl_service_type != null"> -->
	<!-- or hsl_service_type = #{hsl.hsl_service_type} -->
	<!-- </if> -->
	<!-- <if test="hsl.hsl_pet_age != null"> -->
	<!-- or hsl_pet_age = #{hsl.hsl_pet_age} -->
	<!-- </if> -->
	<!-- <if test="hsl.hsl_chkin != null"> -->
	<!-- or <![CDATA[hsl_chkin >= #{hsl.hsl_chkin} and hsl_chkout <= #{hsl.hsl_chkout}]]> -->
	<!-- </if> -->
	<!-- <foreach collection="list" item="item"> -->
	<!-- or hsl_address like ('%${item}%') -->
	<!-- </foreach> -->
	<!-- </trim> -->

	<!-- </select> -->


</mapper>